{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Resume.js","Components/Contact.js","Components/Testimonials.js","Components/common/ProjectViewer.js","Components/Portfolio.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","name","occupation","description","city","address","networks","social","map","network","key","href","url","title","className","id","Component","Footer","About","profilepic","process","image","bio","suburb","state","zip","phone","email","resumeDownload","resumedownload","src","alt","download","Resume","skillmessage","education","school","degree","graduated","workLength","work","length","i","company","years","Array","isArray","_","skills","toLowerCase","style","width","level","Contact","message","contactmessage","useState","fromName","setFromName","fromEmail","setFromEmail","formSubject","setFormSubject","formMessage","setFormMessage","emailSentStatus","setEmailSentStatus","validateEmail","test","String","htmlFor","type","defaultValue","size","onChange","event","target","value","cols","rows","onClick","window","emailjs","send","from_name","subject","then","res","catch","err","alert","position","top","left","marginTop","Testimonials","testimonials","source","text","ProjectViewer","open","toggleModal","achievements","SectionAchievementList","sectionAchievements","sectionAchievement","when","Length","isOpen","content","padding","cursor","sectionTitle","Portfolio","projectViewOpen","setProjectViewOpen","toggleProjectView","professionalProjects","professionalProject","category","personalProjects","personalProject","App","foo","resumeData","ReactGA","initialize","pageview","location","pathname","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","console","log","getResumeData","main","resume","portfolio","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5866253f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    if (this.props.data) {\r\n      var name = this.props.data.name;\r\n      var occupation = this.props.data.occupation;\r\n      var description = this.props.data.description;\r\n      var city = this.props.data.address.city;\r\n      var networks = this.props.data.social.map(function (network) {\r\n        return (\r\n          <li key={network.name}>\r\n            <a href={network.url} title={network.title}>\r\n              <i className={network.className}></i>\r\n            </a>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <header id=\"home\">\r\n        <nav id=\"nav-wrap\">\r\n          <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\r\n            Show navigation\r\n          </a>\r\n          <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">\r\n            Hide navigation\r\n          </a>\r\n\r\n          <ul id=\"nav\" className=\"nav\">\r\n            <li className=\"current\">\r\n              <a className=\"smoothscroll\" href=\"#home\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"smoothscroll\" href=\"#about\">\r\n                About\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"smoothscroll\" href=\"#resume\">\r\n                Resume\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"smoothscroll\" href=\"#portfolio\">\r\n                Works\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"smoothscroll\" href=\"#testimonials\">\r\n                Testimonials\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a className=\"smoothscroll\" href=\"#contact\">\r\n                Contact\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <div className=\"row banner\">\r\n          <div className=\"banner-text\">\r\n            <h1 className=\"responsive-headline\">I'm {name}.</h1>\r\n            <h3>\r\n              I'm a <span>{city}</span> based <span>{occupation}</span>,{\" \"}\r\n              {description}.\r\n            </h3>\r\n            <hr />\r\n            <ul className=\"social\">{networks}</ul>\r\n          </div>\r\n        </div>\r\n\r\n        <p className=\"scrolldown\">\r\n          <a className=\"smoothscroll\" href=\"#about\" title=\"Go to about section\">\r\n            <i className=\"icon-down-circle\"></i>\r\n          </a>\r\n        </p>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    if (this.props.data) {\r\n      var networks = this.props.data.social.map(function (network) {\r\n        return (\r\n          <li key={network.name}>\r\n            <a href={network.url} title={network.title}>\r\n              <i className={network.className}></i>\r\n            </a>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <footer>\r\n        <div className=\"row\">\r\n          <div className=\"twelve columns\">\r\n            <ul className=\"social-links\">{networks}</ul>\r\n\r\n            {/* <ul className=\"copyright\">\r\n              <li>&copy; Copyright 2017 Tim Baker</li>\r\n              <li>&copy; Modified work Copyright 2020 Anthony Hien Vu</li>\r\n            </ul> */}\r\n          </div>\r\n          <div id=\"go-top\">\r\n            <a className=\"smoothscroll\" title=\"Back to top\" href=\"#home\">\r\n              <i className=\"icon-up-open\"></i>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\n\r\nclass About extends Component {\r\n  render() {\r\n    if (this.props.data) {\r\n      var name = this.props.data.name;\r\n      var profilepic =\r\n        process.env.REACT_APP_PUBLIC_URL + \"/images/\" + this.props.data.image;\r\n      var bio = this.props.data.bio;\r\n      // var street = this.props.data.address.street;\r\n      var suburb = this.props.data.address.suburb;\r\n      var state = this.props.data.address.state;\r\n      var zip = this.props.data.address.zip;\r\n      var phone = this.props.data.phone;\r\n      var email = this.props.data.email;\r\n      var resumeDownload = this.props.data.resumedownload;\r\n    }\r\n\r\n    return (\r\n      <section id=\"about\">\r\n        <div className=\"row\">\r\n          <div className=\"three columns\">\r\n            <img\r\n              className=\"profile-pic\"\r\n              src={profilepic}\r\n              alt=\"Anthony Hien Vu's Profile Pic\"\r\n            />\r\n          </div>\r\n          <div className=\"nine columns main-col\">\r\n            <h2>About Me</h2>\r\n\r\n            <p>{bio}</p>\r\n            <div className=\"row\">\r\n              <div className=\"columns contact-details\">\r\n                <h2>Contact Details</h2>\r\n                <p className=\"address\">\r\n                  <span>{name}</span>\r\n                  <br />\r\n                  <span>\r\n                    {/* {street}<br /> */}\r\n                    {suburb} {state}, {zip}\r\n                  </span>\r\n                  <br />\r\n                  <span>{phone}</span>\r\n                  <br />\r\n                  <span>{email}</span>\r\n                </p>\r\n              </div>\r\n              <div className=\"columns download\">\r\n                <p>\r\n                  <a\r\n                    href={\r\n                      process.env.REACT_APP_PUBLIC_URL + \"/\" + resumeDownload\r\n                    }\r\n                    className=\"button\"\r\n                    download\r\n                  >\r\n                    <i className=\"fa fa-download\"></i>Download Resume\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Resume extends Component {\r\n  render() {\r\n    if (this.props.data) {\r\n      var skillmessage = this.props.data.skillmessage;\r\n      var education = this.props.data.education.map(function (education) {\r\n        return (\r\n          <div key={education.school}>\r\n            <h3>{education.school}</h3>\r\n            <p className=\"info\">\r\n              {education.degree} <span></span>\r\n              <em className=\"date\">{education.graduated}</em>\r\n            </p>\r\n            <p>{education.description}</p>\r\n          </div>\r\n        );\r\n      });\r\n      var workLength = this.props.data.work.length;\r\n      var work = this.props.data.work.map(function (work, i) {\r\n        return (\r\n          <div key={work.company}>\r\n            <h3>{work.company}</h3>\r\n            <p className=\"info\">\r\n              {work.title}\r\n              <span></span> <em className=\"date\">{work.years}</em>\r\n            </p>\r\n            {Array.isArray(work.description) ? (\r\n              work.description.map((_, i) => (\r\n                <div key={`${work.company} job description ${i}`}>\r\n                  &bull; {_}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>{work.description}</p>\r\n            )}\r\n            {i !== workLength - 1 && <br />}\r\n          </div>\r\n        );\r\n      });\r\n      var skills = this.props.data.skills.map(function (skills) {\r\n        var className = \"bar-expand \" + skills.name.toLowerCase();\r\n        return (\r\n          <li key={skills.name}>\r\n            <span style={{ width: skills.level }} className={className}></span>\r\n            <em>{skills.name}</em>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <section id=\"resume\">\r\n        <div className=\"row skill\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Skills</span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            <p>{skillmessage}</p>\r\n\r\n            <div className=\"bars\">\r\n              <ul className=\"skills\">{skills}</ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row work\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Work</span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">{work}</div>\r\n        </div>\r\n\r\n        <div className=\"row education\">\r\n          <div className=\"three columns header-col\">\r\n            <h1>\r\n              <span>Education</span>\r\n            </h1>\r\n          </div>\r\n\r\n          <div className=\"nine columns main-col\">\r\n            <div className=\"row item\">\r\n              <div className=\"twelve columns\">{education}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Resume;\r\n","import React, { useState } from \"react\";\r\n\r\nconst Contact = (props) => {\r\n  if (props.data) {\r\n    var name = props.data.name;\r\n    var suburb = props.data.address.suburb;\r\n    var state = props.data.address.state;\r\n    var zip = props.data.address.zip;\r\n    var phone = props.data.phone;\r\n    var email = props.data.email;\r\n    var message = props.data.contactmessage;\r\n  }\r\n\r\n  const [fromName, setFromName] = useState(\"\");\r\n  const [fromEmail, setFromEmail] = useState(\"\");\r\n  const [formSubject, setFormSubject] = useState(\"\");\r\n  const [formMessage, setFormMessage] = useState(\"\");\r\n  const [emailSentStatus, setEmailSentStatus] = useState(\"notSent\");\r\n\r\n  const changeFromName = (event) => setFromName(event.target.value);\r\n  const changeFromEmail = (event) => setFromEmail(event.target.value);\r\n  const changeFormSubject = (event) => setFormSubject(event.target.value);\r\n  const changeFormMessage = (event) => setFormMessage(event.target.value);\r\n\r\n  const validateEmail = (email) => {\r\n    // eslint-disable-next-line\r\n    const expression = /(?!.*\\.{2})^([a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+(\\.[a-z\\d!#$%&'*+\\-\\/=?^_`{|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+)*|\"((([ \\t]*\\r\\n)?[ \\t]+)?([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*(([ \\t]*\\r\\n)?[ \\t]+)?\")@(([a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\d\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.)+([a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF][a-z\\d\\-._~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]*[a-z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])\\.?$/i;\r\n    return expression.test(String(email).toLowerCase());\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (\r\n      fromName.length !== 0 &&\r\n      fromEmail.length !== 0 &&\r\n      validateEmail(fromEmail) &&\r\n      formMessage.length !== 0\r\n    ) {\r\n      setEmailSentStatus(\"sending\");\r\n      window.emailjs\r\n        .send(\"gmail\", \"template_8RW6Q4vx\", {\r\n          message: formMessage,\r\n          from_name: fromName,\r\n          email: fromEmail,\r\n          subject: formSubject || \"No Subject\",\r\n        })\r\n        .then((res) => {\r\n          setEmailSentStatus(\"sent\");\r\n        })\r\n        .catch((err) => setEmailSentStatus(\"error\"));\r\n    } else {\r\n      alert(\r\n        `${\r\n          fromName.length === 0\r\n            ? \"Please fill in the name field.\"\r\n            : fromEmail.length === 0\r\n            ? \"Please write your email address.\"\r\n            : !validateEmail(fromEmail)\r\n            ? \"Please enter a valid email address.\"\r\n            : \"Please write a message before clicking submit.\"\r\n        }`\r\n      );\r\n    }\r\n  };\r\n\r\n  const renderEmptyForm = () => {\r\n    setFromName(\"\");\r\n    setFromEmail(\"\");\r\n    setFormSubject(\"\");\r\n    setFormMessage(\"\");\r\n    setEmailSentStatus(\"notSent\");\r\n  };\r\n\r\n  return (\r\n    <section id=\"contact\">\r\n      <div className=\"row section-head\">\r\n        <div className=\"two columns header-col\">\r\n          <h1>\r\n            <span>Get In Touch.</span>\r\n          </h1>\r\n        </div>\r\n\r\n        <div className=\"ten columns\">\r\n          <h2 className=\"lead\">{message}</h2>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"eight columns\">\r\n          {emailSentStatus === \"notSent\" || emailSentStatus === \"sending\" ? (\r\n            <div>\r\n              <div>\r\n                <label htmlFor=\"contactName\">\r\n                  Name <span className=\"required\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  defaultValue=\"\"\r\n                  size=\"35\"\r\n                  id=\"contactName\"\r\n                  name=\"contactName\"\r\n                  onChange={changeFromName}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"contactEmail\">\r\n                  Email <span className=\"required\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  defaultValue=\"\"\r\n                  size=\"35\"\r\n                  id=\"contactEmail\"\r\n                  name=\"contactEmail\"\r\n                  onChange={changeFromEmail}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"contactSubject\">Subject</label>\r\n                <input\r\n                  type=\"text\"\r\n                  defaultValue=\"\"\r\n                  size=\"35\"\r\n                  id=\"contactSubject\"\r\n                  name=\"contactSubject\"\r\n                  onChange={changeFormSubject}\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label htmlFor=\"contactMessage\">\r\n                  Message <span className=\"required\">*</span>\r\n                </label>\r\n                <textarea\r\n                  cols=\"50\"\r\n                  rows=\"15\"\r\n                  id=\"contactMessage\"\r\n                  name=\"contactMessage\"\r\n                  onChange={changeFormMessage}\r\n                ></textarea>\r\n              </div>\r\n\r\n              <div>\r\n                <button className=\"submit\" onClick={() => onSubmit()}>\r\n                  Submit\r\n                </button>\r\n                {emailSentStatus === \"sending\" && (\r\n                  <img\r\n                    alt=\"\"\r\n                    src={process.env.PUBLIC_URL + \"/images/loader.gif\"}\r\n                    style={{ position: \"relative\", top: \"18px\", left: \"10px\" }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n          ) : emailSentStatus === \"sent\" ? (\r\n            <div id=\"message-success\">\r\n              <i className=\"fa fa-check\"></i>Your message was sent, thank you!\r\n              <br />\r\n              <button\r\n                className=\"renderForm\"\r\n                onClick={() => renderEmptyForm()}\r\n                style={{ marginTop: \"10px\" }}\r\n              >\r\n                Send another message\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div id=\"message-warning\">\r\n              Error has occured, message not sent. Please try again later.\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <aside className=\"four columns footer-widgets\">\r\n          <div className=\"widget widget_contact\">\r\n            <h4>Contact Details</h4>\r\n            <p className=\"address\">\r\n              {name}\r\n              <br />\r\n              {/* {street} <br /> */}\r\n              {suburb}, {state} {zip}\r\n              <br />\r\n              {email}\r\n              <br />\r\n              <span>{phone}</span>\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"widget widget_tweets\">\r\n            <h4 className=\"widget-title\">Thank you for reading</h4>\r\n            <ul id=\"twitter\">\r\n              <li>\r\n                <span>\r\n                  I appreciate your interest and I look forward to hearing from\r\n                  you.\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </aside>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Testimonials extends Component {\r\n  render() {\r\n    if (this.props.data) {\r\n      var testimonials = this.props.data.testimonials.map(function (\r\n        testimonials\r\n      ) {\r\n        return (\r\n          <li key={testimonials.source}>\r\n            <blockquote>\r\n              <p>{testimonials.text}</p>\r\n              <cite>{testimonials.source}</cite>\r\n            </blockquote>\r\n          </li>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <section id=\"testimonials\">\r\n        <div className=\"text-container\">\r\n          <div className=\"row\">\r\n            <div className=\"two columns header-col\">\r\n              <h1>\r\n                <span>Client Testimonials</span>\r\n              </h1>\r\n            </div>\r\n\r\n            <div className=\"ten columns flex-container\">\r\n              <ul className=\"slides\">{testimonials}</ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Testimonials;\r\n","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\r\nimport \"react-tabs/style/react-tabs.css\";\r\n\r\nconst ProjectViewer = ({ title, open, toggleModal, achievements }) => {\r\n  const style = {\r\n    content: {\r\n      padding: \"50px\",\r\n    },\r\n  };\r\n\r\n  const SectionAchievementList = ({ sectionAchievements }) => {\r\n    return (\r\n      sectionAchievements &&\r\n      sectionAchievements.map((sectionAchievement, i) => {\r\n        return (\r\n          <div key={sectionAchievement.title} className=\"projectViewer\">\r\n            <div className=\"projectViewer__sectionAchievementTitle\">\r\n              <h3>{sectionAchievement.title}</h3>\r\n              <span></span>\r\n              <em className=\"date\">{sectionAchievement.when}</em>\r\n            </div>\r\n            <div className=\"projectViewer__sectionAchievement\">\r\n              <img\r\n                alt={`${sectionAchievement.title}`}\r\n                src={\r\n                  process.env.PUBLIC_URL +\r\n                  \"/images/portfolio/\" +\r\n                  sectionAchievement.image\r\n                }\r\n              />\r\n              {Array.isArray(sectionAchievement.description) ? (\r\n                sectionAchievement.description.map((_) => <div>&bull; {_}</div>)\r\n              ) : (\r\n                <p>{sectionAchievement.description}</p>\r\n              )}\r\n              {i !== sectionAchievement.Length - 1 && <br />}\r\n            </div>\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <section id=\"projectView\">\r\n      <Modal isOpen={open} style={style}>\r\n        <div id=\"return\" style={{ cursor: \"pointer\" }}>\r\n          <a className=\"smoothscroll\" title=\"Return to website\">\r\n            <i className=\"icon-left-circle\" onClick={() => toggleModal()}></i>\r\n          </a>\r\n        </div>\r\n\r\n        <div className=\"projectViewer__title\">\r\n          <h1>{title}</h1>\r\n        </div>\r\n        <section id=\"resume\">\r\n          <div className=\"nine columns main-col\">\r\n            <Tabs>\r\n              <TabList>\r\n                {achievements.map((_) => (\r\n                  <Tab key={_.sectionTitle}>{_.sectionTitle}</Tab>\r\n                ))}\r\n              </TabList>\r\n              {achievements.map((_) => (\r\n                <TabPanel key={_.sectionTitle + \" achievements\"}>\r\n                  <SectionAchievementList\r\n                    sectionAchievements={_.sectionAchievements}\r\n                  />\r\n                </TabPanel>\r\n              ))}\r\n            </Tabs>\r\n          </div>\r\n        </section>\r\n        <div className=\"projectViewer__closeButton\">\r\n          <button onClick={() => toggleModal()}>Close</button>\r\n        </div>\r\n      </Modal>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProjectViewer;\r\n","import React, { useState } from \"react\";\r\nimport ProjectViewer from \"./common/ProjectViewer\";\r\n\r\nconst Portfolio = (props) => {\r\n  const [projectViewOpen, setProjectViewOpen] = useState(false);\r\n\r\n  const toggleProjectView = () => setProjectViewOpen(!projectViewOpen);\r\n\r\n  if (props.data) {\r\n    var professionalProjects = props.data.professionalProjects.map(function (\r\n      professionalProject\r\n    ) {\r\n      return (\r\n        <div key={professionalProject.title}>\r\n          <div className=\"columns portfolio-item\">\r\n            <div\r\n              className=\"item-wrap\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => toggleProjectView()}\r\n            >\r\n              <img\r\n                alt={professionalProject.title}\r\n                src={\r\n                  process.env.REACT_APP_PUBLIC_URL +\r\n                  \"/images/portfolio/\" +\r\n                  professionalProject.image\r\n                }\r\n              />\r\n              <div className=\"overlay\">\r\n                <div className=\"portfolio-item-meta\">\r\n                  <h5>{professionalProject.title}</h5>\r\n                  <p>{professionalProject.category}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <ProjectViewer\r\n            title={professionalProject.title}\r\n            open={projectViewOpen}\r\n            toggleModal={toggleProjectView}\r\n            achievements={professionalProject.achievements}\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n\r\n    var personalProjects = props.data.personalProjects.map(function (\r\n      personalProject\r\n    ) {\r\n      return (\r\n        <div key={personalProject.title} className=\"columns portfolio-item\">\r\n          <div className=\"item-wrap\">\r\n            <a href={personalProject.url}>\r\n              <img\r\n                alt={personalProject.title}\r\n                src={\r\n                  process.env.REACT_APP_PUBLIC_URL +\r\n                  \"/images/portfolio/\" +\r\n                  personalProject.image\r\n                }\r\n              />\r\n              <div className=\"overlay\">\r\n                <div className=\"portfolio-item-meta\">\r\n                  <h5>{personalProject.title}</h5>\r\n                  <p>{personalProject.category}</p>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  return (\r\n    <section id=\"portfolio\">\r\n      <div className=\"row\" id=\"professional-portfolio\">\r\n        <div className=\"twelve columns collapsed\">\r\n          <h1>Check Out Some of My Professional Projects</h1>\r\n\r\n          <div\r\n            id=\"portfolio-wrapper\"\r\n            className=\"bgrid-quarters s-bgrid-thirds cf\"\r\n          >\r\n            {professionalProjects}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" id=\"personal-portfolio\">\r\n        <div className=\"twelve columns collapsed\">\r\n          <h1>Check Out Some of My Personal Projects</h1>\r\n\r\n          <div\r\n            id=\"portfolio-wrapper\"\r\n            className=\"bgrid-quarters s-bgrid-thirds cf\"\r\n          >\r\n            {personalProjects}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React, { Component } from \"react\";\r\nimport ReactGA from \"react-ga\";\r\nimport $ from \"jquery\";\r\nimport Header from \"./Components/Header\";\r\nimport Footer from \"./Components/Footer\";\r\nimport About from \"./Components/About\";\r\nimport Resume from \"./Components/Resume\";\r\nimport Contact from \"./Components/Contact\";\r\nimport Testimonials from \"./Components/Testimonials\";\r\nimport Portfolio from \"./Components/Portfolio\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      foo: \"bar\",\r\n      resumeData: {},\r\n    };\r\n\r\n    ReactGA.initialize(\"UA-110570651-1\");\r\n    ReactGA.pageview(window.location.pathname);\r\n  }\r\n\r\n  getResumeData() {\r\n    $.ajax({\r\n      url: process.env.REACT_APP_PUBLIC_URL + \"/resumeData.json\",\r\n      dataType: \"json\",\r\n      cache: false,\r\n      success: function (data) {\r\n        this.setState({ resumeData: data });\r\n      }.bind(this),\r\n      error: function (xhr, status, err) {\r\n        console.log(err);\r\n        alert(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getResumeData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header data={this.state.resumeData.main} />\r\n        <About data={this.state.resumeData.main} />\r\n        <Resume data={this.state.resumeData.resume} />\r\n        <Portfolio data={this.state.resumeData.portfolio} />\r\n        <Testimonials data={this.state.resumeData.testimonials} />\r\n        <Contact data={this.state.resumeData.main} />\r\n        <Footer data={this.state.resumeData.main} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}